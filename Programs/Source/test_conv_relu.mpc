from tensor import Tensor,reset_gloabal_store,untrain,autograd_function
import tensor as tensor

import functional as F

program.options_from_args()
ROW=3
COL=4
HEIGHT=4
LENGTH=10

@autograd_function
def test_conv2d():
    print_ln("test_conv2d:")
    training_samples = MultiArray([4, 3,5, 5], sfix)
    for i in range(0,4):
        for j in range(0,3):
            for k in range(0,5):
                for m in range(5):
                    training_samples[i][j][k][m]=i+j+k+m


    training_labels = MultiArray([4, 10], sint)
    weight_v=MultiArray([1,3,3,3],sfix)
    for i in range(0,3):
        for j in range(0,3):
            for k in range(0,3):
                weight_v[0][i][j][k] = sfix(i+j+k)


    input = Tensor(training_samples, req_grad = True)
    weight=Tensor(weight_v,req_grad = True )

    output=F.conv2d(input,weight)
    tensor.train()
    tensor.reset_op_id()
    output=F.conv2d(input,weight)
    output.backward()
    output.value.print_reveal_nested()
    weight.grad.print_reveal_nested()
    input.grad.print_reveal_nested()

test_conv2d()

