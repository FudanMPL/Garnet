# @buildingblock("test")
# def test(actual, expected):

#     # you can reveal a number in order to print it

#     actual = actual.reveal()
#     print_ln('expected %s, got %s', expected, actual)

from Compiler import mpc_math

# a = sint(1)
# b = sint(2)
# c=a>b
# d=a<b
# test(a > b, 1)
# test(a < b, 1)
# from sorting import radix_sort
# import mpc_math
# a = sfix([1,2,3])
program.use_trunc_pr = True
# sfix.round_nearest = True
sfix.set_precision(10, 34)
cfix.set_precision(10, 34)
for i in range(1):
    a = sfix(-0.03125)
    b = sfix(0.03125)


    # c = a/512
    # c = a*c*c*c
    # print_ln("a = %s",a.reveal())
    # print_ln("b = %s",b.reveal())
    
    print_ln("%s",(a*b).reveal())

    
# ab = sfix([3, 2, 1])
# c = mpc_math.log_fx(a, 2)
# print_ln("c = %s",c.reveal())
