import ents, util

attr_lengths = None
ents.n_threads = 4
ents.tree_h = 4 # tree height

program.use_trunc_pr=True







dataset = program.args[1]
if dataset == "IRIS":
    m = 4
    n_train = 100
    ents.label_number = 3
elif dataset == "cancer":
    m = 30
    n_train = 381
    ents.label_number = 2
elif dataset == "diagnosis":
    m = 6
    n_train = 120
    ents.label_number = 2
elif dataset == "adult":
    m = 14
    n_train = 48842
    ents.label_number = 2
elif dataset == "kohkiloyeh":
    m = 5
    n_train = 100
    ents.label_number = 2
elif dataset == "tic-tac-toe":
    m = 9
    n_train = 958
    ents.label_number = 2
elif dataset == "digits":
    m = 64
    n_train = 1203
    ents.label_number = 10
elif dataset == "wine":
    m = 13
    n_train = 119
    ents.label_number = 4
elif dataset == "Skin":
    m = 3
    n_train = 245057
    ents.label_number = 2
elif dataset == "sepsis_survival":
    m = 3
    n_train = 129392
    ents.label_number = 2
else:
    print("please include %s in ents.mpc", dataset)


if ents.n_threads == 1:
    ents.single_thread = True




train = sint.Array(n_train), sint.Matrix(m, n_train)


for x in train:
    x.input_from(0)


trainer = ents.TreeTrainer(
   train[1], train[0], ents.tree_h, attr_lengths=None,
   n_threads=ents.n_threads)


layers = trainer.train()