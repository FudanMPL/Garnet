// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/util/autotune_maps/conv_parameters.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/xla/stream_executor/dnn.pb.h"
#include "tensorflow/core/framework/types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto;
namespace tensorflow {
class ConvParametersProto;
class ConvParametersProtoDefaultTypeInternal;
extern ConvParametersProtoDefaultTypeInternal _ConvParametersProto_default_instance_;
class ConvParametersProto_Fusion;
class ConvParametersProto_FusionDefaultTypeInternal;
extern ConvParametersProto_FusionDefaultTypeInternal _ConvParametersProto_Fusion_default_instance_;
class MatmulParametersProto;
class MatmulParametersProtoDefaultTypeInternal;
extern MatmulParametersProtoDefaultTypeInternal _MatmulParametersProto_default_instance_;
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> ::tensorflow::ConvParametersProto* Arena::CreateMaybeMessage<::tensorflow::ConvParametersProto>(Arena*);
template<> ::tensorflow::ConvParametersProto_Fusion* Arena::CreateMaybeMessage<::tensorflow::ConvParametersProto_Fusion>(Arena*);
template<> ::tensorflow::MatmulParametersProto* Arena::CreateMaybeMessage<::tensorflow::MatmulParametersProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tensorflow {

// ===================================================================

class ConvParametersProto_Fusion :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.ConvParametersProto.Fusion) */ {
 public:
  ConvParametersProto_Fusion();
  virtual ~ConvParametersProto_Fusion();

  ConvParametersProto_Fusion(const ConvParametersProto_Fusion& from);
  ConvParametersProto_Fusion(ConvParametersProto_Fusion&& from) noexcept
    : ConvParametersProto_Fusion() {
    *this = ::std::move(from);
  }

  inline ConvParametersProto_Fusion& operator=(const ConvParametersProto_Fusion& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvParametersProto_Fusion& operator=(ConvParametersProto_Fusion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConvParametersProto_Fusion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvParametersProto_Fusion* internal_default_instance() {
    return reinterpret_cast<const ConvParametersProto_Fusion*>(
               &_ConvParametersProto_Fusion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConvParametersProto_Fusion& a, ConvParametersProto_Fusion& b) {
    a.Swap(&b);
  }
  inline void Swap(ConvParametersProto_Fusion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConvParametersProto_Fusion* New() const final {
    return CreateMaybeMessage<ConvParametersProto_Fusion>(nullptr);
  }

  ConvParametersProto_Fusion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConvParametersProto_Fusion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConvParametersProto_Fusion& from);
  void MergeFrom(const ConvParametersProto_Fusion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvParametersProto_Fusion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.ConvParametersProto.Fusion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsContribFieldNumber = 1,
    kActivationModeFieldNumber = 2,
    kConvScaleFieldNumber = 3,
    kSideInputScaleFieldNumber = 4,
  };
  // bool is_contrib = 1;
  void clear_is_contrib();
  bool is_contrib() const;
  void set_is_contrib(bool value);

  // .stream_executor.dnn.ActivationMode activation_mode = 2;
  void clear_activation_mode();
  ::stream_executor::dnn::ActivationMode activation_mode() const;
  void set_activation_mode(::stream_executor::dnn::ActivationMode value);

  // double conv_scale = 3;
  void clear_conv_scale();
  double conv_scale() const;
  void set_conv_scale(double value);

  // double side_input_scale = 4;
  void clear_side_input_scale();
  double side_input_scale() const;
  void set_side_input_scale(double value);

  // @@protoc_insertion_point(class_scope:tensorflow.ConvParametersProto.Fusion)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_contrib_;
  int activation_mode_;
  double conv_scale_;
  double side_input_scale_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto;
};
// -------------------------------------------------------------------

class ConvParametersProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.ConvParametersProto) */ {
 public:
  ConvParametersProto();
  virtual ~ConvParametersProto();

  ConvParametersProto(const ConvParametersProto& from);
  ConvParametersProto(ConvParametersProto&& from) noexcept
    : ConvParametersProto() {
    *this = ::std::move(from);
  }

  inline ConvParametersProto& operator=(const ConvParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvParametersProto& operator=(ConvParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConvParametersProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvParametersProto* internal_default_instance() {
    return reinterpret_cast<const ConvParametersProto*>(
               &_ConvParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConvParametersProto& a, ConvParametersProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ConvParametersProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConvParametersProto* New() const final {
    return CreateMaybeMessage<ConvParametersProto>(nullptr);
  }

  ConvParametersProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConvParametersProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConvParametersProto& from);
  void MergeFrom(const ConvParametersProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvParametersProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.ConvParametersProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ConvParametersProto_Fusion Fusion;

  // accessors -------------------------------------------------------

  enum : int {
    kInFieldNumber = 4,
    kFilterFieldNumber = 6,
    kDilationFieldNumber = 7,
    kStrideFieldNumber = 8,
    kPaddingFieldNumber = 9,
    kDeviceIdentifierFieldNumber = 12,
    kFusionFieldNumber = 13,
    kBatchFieldNumber = 1,
    kInDepthsFieldNumber = 2,
    kOutDepthsFieldNumber = 3,
    kDataFormatFieldNumber = 5,
    kDtypeFieldNumber = 10,
    kGroupCountFieldNumber = 11,
    kVersionFieldNumber = 14,
  };
  // repeated int64 in = 4;
  int in_size() const;
  void clear_in();
  ::PROTOBUF_NAMESPACE_ID::int64 in(int index) const;
  void set_in(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_in(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      in() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_in();

  // repeated int64 filter = 6;
  int filter_size() const;
  void clear_filter();
  ::PROTOBUF_NAMESPACE_ID::int64 filter(int index) const;
  void set_filter(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_filter(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      filter() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_filter();

  // repeated int64 dilation = 7;
  int dilation_size() const;
  void clear_dilation();
  ::PROTOBUF_NAMESPACE_ID::int64 dilation(int index) const;
  void set_dilation(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_dilation(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      dilation() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_dilation();

  // repeated int64 stride = 8;
  int stride_size() const;
  void clear_stride();
  ::PROTOBUF_NAMESPACE_ID::int64 stride(int index) const;
  void set_stride(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_stride(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      stride() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_stride();

  // repeated int64 padding = 9;
  int padding_size() const;
  void clear_padding();
  ::PROTOBUF_NAMESPACE_ID::int64 padding(int index) const;
  void set_padding(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_padding(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      padding() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_padding();

  // string device_identifier = 12;
  void clear_device_identifier();
  const std::string& device_identifier() const;
  void set_device_identifier(const std::string& value);
  void set_device_identifier(std::string&& value);
  void set_device_identifier(const char* value);
  void set_device_identifier(const char* value, size_t size);
  std::string* mutable_device_identifier();
  std::string* release_device_identifier();
  void set_allocated_device_identifier(std::string* device_identifier);

  // .tensorflow.ConvParametersProto.Fusion fusion = 13;
  bool has_fusion() const;
  void clear_fusion();
  const ::tensorflow::ConvParametersProto_Fusion& fusion() const;
  ::tensorflow::ConvParametersProto_Fusion* release_fusion();
  ::tensorflow::ConvParametersProto_Fusion* mutable_fusion();
  void set_allocated_fusion(::tensorflow::ConvParametersProto_Fusion* fusion);

  // int64 batch = 1;
  void clear_batch();
  ::PROTOBUF_NAMESPACE_ID::int64 batch() const;
  void set_batch(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 in_depths = 2;
  void clear_in_depths();
  ::PROTOBUF_NAMESPACE_ID::int64 in_depths() const;
  void set_in_depths(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 out_depths = 3;
  void clear_out_depths();
  ::PROTOBUF_NAMESPACE_ID::int64 out_depths() const;
  void set_out_depths(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 data_format = 5;
  void clear_data_format();
  ::PROTOBUF_NAMESPACE_ID::int32 data_format() const;
  void set_data_format(::PROTOBUF_NAMESPACE_ID::int32 value);

  // .tensorflow.DataType dtype = 10;
  void clear_dtype();
  ::tensorflow::DataType dtype() const;
  void set_dtype(::tensorflow::DataType value);

  // int32 group_count = 11;
  void clear_group_count();
  ::PROTOBUF_NAMESPACE_ID::int32 group_count() const;
  void set_group_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 version = 14;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.ConvParametersProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > in_;
  mutable std::atomic<int> _in_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > filter_;
  mutable std::atomic<int> _filter_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > dilation_;
  mutable std::atomic<int> _dilation_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > stride_;
  mutable std::atomic<int> _stride_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > padding_;
  mutable std::atomic<int> _padding_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_identifier_;
  ::tensorflow::ConvParametersProto_Fusion* fusion_;
  ::PROTOBUF_NAMESPACE_ID::int64 batch_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_depths_;
  ::PROTOBUF_NAMESPACE_ID::int64 out_depths_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_format_;
  int dtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 group_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto;
};
// -------------------------------------------------------------------

class MatmulParametersProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.MatmulParametersProto) */ {
 public:
  MatmulParametersProto();
  virtual ~MatmulParametersProto();

  MatmulParametersProto(const MatmulParametersProto& from);
  MatmulParametersProto(MatmulParametersProto&& from) noexcept
    : MatmulParametersProto() {
    *this = ::std::move(from);
  }

  inline MatmulParametersProto& operator=(const MatmulParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatmulParametersProto& operator=(MatmulParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MatmulParametersProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatmulParametersProto* internal_default_instance() {
    return reinterpret_cast<const MatmulParametersProto*>(
               &_MatmulParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MatmulParametersProto& a, MatmulParametersProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MatmulParametersProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MatmulParametersProto* New() const final {
    return CreateMaybeMessage<MatmulParametersProto>(nullptr);
  }

  MatmulParametersProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MatmulParametersProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MatmulParametersProto& from);
  void MergeFrom(const MatmulParametersProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatmulParametersProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.MatmulParametersProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto);
    return ::descriptor_table_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceIdentifierFieldNumber = 12,
    kAbDtypeFieldNumber = 1,
    kCDtypeFieldNumber = 2,
    kMFieldNumber = 5,
    kNFieldNumber = 6,
    kTransAFieldNumber = 3,
    kTransBFieldNumber = 4,
    kActivationModeFieldNumber = 11,
    kKFieldNumber = 7,
    kLdaFieldNumber = 8,
    kLdbFieldNumber = 9,
    kLdcFieldNumber = 10,
    kVersionFieldNumber = 14,
  };
  // string device_identifier = 12;
  void clear_device_identifier();
  const std::string& device_identifier() const;
  void set_device_identifier(const std::string& value);
  void set_device_identifier(std::string&& value);
  void set_device_identifier(const char* value);
  void set_device_identifier(const char* value, size_t size);
  std::string* mutable_device_identifier();
  std::string* release_device_identifier();
  void set_allocated_device_identifier(std::string* device_identifier);

  // .tensorflow.DataType ab_dtype = 1;
  void clear_ab_dtype();
  ::tensorflow::DataType ab_dtype() const;
  void set_ab_dtype(::tensorflow::DataType value);

  // .tensorflow.DataType c_dtype = 2;
  void clear_c_dtype();
  ::tensorflow::DataType c_dtype() const;
  void set_c_dtype(::tensorflow::DataType value);

  // uint64 m = 5;
  void clear_m();
  ::PROTOBUF_NAMESPACE_ID::uint64 m() const;
  void set_m(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint64 n = 6;
  void clear_n();
  ::PROTOBUF_NAMESPACE_ID::uint64 n() const;
  void set_n(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // bool trans_a = 3;
  void clear_trans_a();
  bool trans_a() const;
  void set_trans_a(bool value);

  // bool trans_b = 4;
  void clear_trans_b();
  bool trans_b() const;
  void set_trans_b(bool value);

  // .stream_executor.dnn.ActivationMode activation_mode = 11;
  void clear_activation_mode();
  ::stream_executor::dnn::ActivationMode activation_mode() const;
  void set_activation_mode(::stream_executor::dnn::ActivationMode value);

  // uint64 k = 7;
  void clear_k();
  ::PROTOBUF_NAMESPACE_ID::uint64 k() const;
  void set_k(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // int64 lda = 8;
  void clear_lda();
  ::PROTOBUF_NAMESPACE_ID::int64 lda() const;
  void set_lda(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 ldb = 9;
  void clear_ldb();
  ::PROTOBUF_NAMESPACE_ID::int64 ldb() const;
  void set_ldb(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 ldc = 10;
  void clear_ldc();
  ::PROTOBUF_NAMESPACE_ID::int64 ldc() const;
  void set_ldc(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 version = 14;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:tensorflow.MatmulParametersProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_identifier_;
  int ab_dtype_;
  int c_dtype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 m_;
  ::PROTOBUF_NAMESPACE_ID::uint64 n_;
  bool trans_a_;
  bool trans_b_;
  int activation_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 k_;
  ::PROTOBUF_NAMESPACE_ID::int64 lda_;
  ::PROTOBUF_NAMESPACE_ID::int64 ldb_;
  ::PROTOBUF_NAMESPACE_ID::int64 ldc_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConvParametersProto_Fusion

// bool is_contrib = 1;
inline void ConvParametersProto_Fusion::clear_is_contrib() {
  is_contrib_ = false;
}
inline bool ConvParametersProto_Fusion::is_contrib() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.Fusion.is_contrib)
  return is_contrib_;
}
inline void ConvParametersProto_Fusion::set_is_contrib(bool value) {
  
  is_contrib_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.Fusion.is_contrib)
}

// .stream_executor.dnn.ActivationMode activation_mode = 2;
inline void ConvParametersProto_Fusion::clear_activation_mode() {
  activation_mode_ = 0;
}
inline ::stream_executor::dnn::ActivationMode ConvParametersProto_Fusion::activation_mode() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.Fusion.activation_mode)
  return static_cast< ::stream_executor::dnn::ActivationMode >(activation_mode_);
}
inline void ConvParametersProto_Fusion::set_activation_mode(::stream_executor::dnn::ActivationMode value) {
  
  activation_mode_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.Fusion.activation_mode)
}

// double conv_scale = 3;
inline void ConvParametersProto_Fusion::clear_conv_scale() {
  conv_scale_ = 0;
}
inline double ConvParametersProto_Fusion::conv_scale() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.Fusion.conv_scale)
  return conv_scale_;
}
inline void ConvParametersProto_Fusion::set_conv_scale(double value) {
  
  conv_scale_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.Fusion.conv_scale)
}

// double side_input_scale = 4;
inline void ConvParametersProto_Fusion::clear_side_input_scale() {
  side_input_scale_ = 0;
}
inline double ConvParametersProto_Fusion::side_input_scale() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.Fusion.side_input_scale)
  return side_input_scale_;
}
inline void ConvParametersProto_Fusion::set_side_input_scale(double value) {
  
  side_input_scale_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.Fusion.side_input_scale)
}

// -------------------------------------------------------------------

// ConvParametersProto

// int64 batch = 1;
inline void ConvParametersProto::clear_batch() {
  batch_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::batch() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.batch)
  return batch_;
}
inline void ConvParametersProto::set_batch(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  batch_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.batch)
}

// int64 in_depths = 2;
inline void ConvParametersProto::clear_in_depths() {
  in_depths_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::in_depths() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.in_depths)
  return in_depths_;
}
inline void ConvParametersProto::set_in_depths(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  in_depths_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.in_depths)
}

// int64 out_depths = 3;
inline void ConvParametersProto::clear_out_depths() {
  out_depths_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::out_depths() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.out_depths)
  return out_depths_;
}
inline void ConvParametersProto::set_out_depths(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  out_depths_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.out_depths)
}

// repeated int64 in = 4;
inline int ConvParametersProto::in_size() const {
  return in_.size();
}
inline void ConvParametersProto::clear_in() {
  in_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::in(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.in)
  return in_.Get(index);
}
inline void ConvParametersProto::set_in(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  in_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.in)
}
inline void ConvParametersProto::add_in(::PROTOBUF_NAMESPACE_ID::int64 value) {
  in_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.ConvParametersProto.in)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ConvParametersProto::in() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvParametersProto.in)
  return in_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ConvParametersProto::mutable_in() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvParametersProto.in)
  return &in_;
}

// int32 data_format = 5;
inline void ConvParametersProto::clear_data_format() {
  data_format_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvParametersProto::data_format() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.data_format)
  return data_format_;
}
inline void ConvParametersProto::set_data_format(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  data_format_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.data_format)
}

// repeated int64 filter = 6;
inline int ConvParametersProto::filter_size() const {
  return filter_.size();
}
inline void ConvParametersProto::clear_filter() {
  filter_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::filter(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.filter)
  return filter_.Get(index);
}
inline void ConvParametersProto::set_filter(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  filter_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.filter)
}
inline void ConvParametersProto::add_filter(::PROTOBUF_NAMESPACE_ID::int64 value) {
  filter_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.ConvParametersProto.filter)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ConvParametersProto::filter() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvParametersProto.filter)
  return filter_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ConvParametersProto::mutable_filter() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvParametersProto.filter)
  return &filter_;
}

// repeated int64 dilation = 7;
inline int ConvParametersProto::dilation_size() const {
  return dilation_.size();
}
inline void ConvParametersProto::clear_dilation() {
  dilation_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::dilation(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.dilation)
  return dilation_.Get(index);
}
inline void ConvParametersProto::set_dilation(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  dilation_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.dilation)
}
inline void ConvParametersProto::add_dilation(::PROTOBUF_NAMESPACE_ID::int64 value) {
  dilation_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.ConvParametersProto.dilation)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ConvParametersProto::dilation() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvParametersProto.dilation)
  return dilation_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ConvParametersProto::mutable_dilation() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvParametersProto.dilation)
  return &dilation_;
}

// repeated int64 stride = 8;
inline int ConvParametersProto::stride_size() const {
  return stride_.size();
}
inline void ConvParametersProto::clear_stride() {
  stride_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::stride(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.stride)
  return stride_.Get(index);
}
inline void ConvParametersProto::set_stride(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  stride_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.stride)
}
inline void ConvParametersProto::add_stride(::PROTOBUF_NAMESPACE_ID::int64 value) {
  stride_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.ConvParametersProto.stride)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ConvParametersProto::stride() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvParametersProto.stride)
  return stride_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ConvParametersProto::mutable_stride() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvParametersProto.stride)
  return &stride_;
}

// repeated int64 padding = 9;
inline int ConvParametersProto::padding_size() const {
  return padding_.size();
}
inline void ConvParametersProto::clear_padding() {
  padding_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConvParametersProto::padding(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.padding)
  return padding_.Get(index);
}
inline void ConvParametersProto::set_padding(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  padding_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.padding)
}
inline void ConvParametersProto::add_padding(::PROTOBUF_NAMESPACE_ID::int64 value) {
  padding_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.ConvParametersProto.padding)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ConvParametersProto::padding() const {
  // @@protoc_insertion_point(field_list:tensorflow.ConvParametersProto.padding)
  return padding_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ConvParametersProto::mutable_padding() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ConvParametersProto.padding)
  return &padding_;
}

// .tensorflow.DataType dtype = 10;
inline void ConvParametersProto::clear_dtype() {
  dtype_ = 0;
}
inline ::tensorflow::DataType ConvParametersProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.dtype)
  return static_cast< ::tensorflow::DataType >(dtype_);
}
inline void ConvParametersProto::set_dtype(::tensorflow::DataType value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.dtype)
}

// int32 group_count = 11;
inline void ConvParametersProto::clear_group_count() {
  group_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvParametersProto::group_count() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.group_count)
  return group_count_;
}
inline void ConvParametersProto::set_group_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  group_count_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.group_count)
}

// string device_identifier = 12;
inline void ConvParametersProto::clear_device_identifier() {
  device_identifier_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConvParametersProto::device_identifier() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.device_identifier)
  return device_identifier_.GetNoArena();
}
inline void ConvParametersProto::set_device_identifier(const std::string& value) {
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.device_identifier)
}
inline void ConvParametersProto::set_device_identifier(std::string&& value) {
  
  device_identifier_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.ConvParametersProto.device_identifier)
}
inline void ConvParametersProto::set_device_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.ConvParametersProto.device_identifier)
}
inline void ConvParametersProto::set_device_identifier(const char* value, size_t size) {
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.ConvParametersProto.device_identifier)
}
inline std::string* ConvParametersProto::mutable_device_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvParametersProto.device_identifier)
  return device_identifier_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConvParametersProto::release_device_identifier() {
  // @@protoc_insertion_point(field_release:tensorflow.ConvParametersProto.device_identifier)
  
  return device_identifier_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConvParametersProto::set_allocated_device_identifier(std::string* device_identifier) {
  if (device_identifier != nullptr) {
    
  } else {
    
  }
  device_identifier_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_identifier);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvParametersProto.device_identifier)
}

// .tensorflow.ConvParametersProto.Fusion fusion = 13;
inline bool ConvParametersProto::has_fusion() const {
  return this != internal_default_instance() && fusion_ != nullptr;
}
inline void ConvParametersProto::clear_fusion() {
  if (GetArenaNoVirtual() == nullptr && fusion_ != nullptr) {
    delete fusion_;
  }
  fusion_ = nullptr;
}
inline const ::tensorflow::ConvParametersProto_Fusion& ConvParametersProto::fusion() const {
  const ::tensorflow::ConvParametersProto_Fusion* p = fusion_;
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.fusion)
  return p != nullptr ? *p : *reinterpret_cast<const ::tensorflow::ConvParametersProto_Fusion*>(
      &::tensorflow::_ConvParametersProto_Fusion_default_instance_);
}
inline ::tensorflow::ConvParametersProto_Fusion* ConvParametersProto::release_fusion() {
  // @@protoc_insertion_point(field_release:tensorflow.ConvParametersProto.fusion)
  
  ::tensorflow::ConvParametersProto_Fusion* temp = fusion_;
  fusion_ = nullptr;
  return temp;
}
inline ::tensorflow::ConvParametersProto_Fusion* ConvParametersProto::mutable_fusion() {
  
  if (fusion_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::ConvParametersProto_Fusion>(GetArenaNoVirtual());
    fusion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.ConvParametersProto.fusion)
  return fusion_;
}
inline void ConvParametersProto::set_allocated_fusion(::tensorflow::ConvParametersProto_Fusion* fusion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fusion_;
  }
  if (fusion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fusion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fusion, submessage_arena);
    }
    
  } else {
    
  }
  fusion_ = fusion;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.ConvParametersProto.fusion)
}

// int32 version = 14;
inline void ConvParametersProto::clear_version() {
  version_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvParametersProto::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.ConvParametersProto.version)
  return version_;
}
inline void ConvParametersProto::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.ConvParametersProto.version)
}

// -------------------------------------------------------------------

// MatmulParametersProto

// .tensorflow.DataType ab_dtype = 1;
inline void MatmulParametersProto::clear_ab_dtype() {
  ab_dtype_ = 0;
}
inline ::tensorflow::DataType MatmulParametersProto::ab_dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.ab_dtype)
  return static_cast< ::tensorflow::DataType >(ab_dtype_);
}
inline void MatmulParametersProto::set_ab_dtype(::tensorflow::DataType value) {
  
  ab_dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.ab_dtype)
}

// .tensorflow.DataType c_dtype = 2;
inline void MatmulParametersProto::clear_c_dtype() {
  c_dtype_ = 0;
}
inline ::tensorflow::DataType MatmulParametersProto::c_dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.c_dtype)
  return static_cast< ::tensorflow::DataType >(c_dtype_);
}
inline void MatmulParametersProto::set_c_dtype(::tensorflow::DataType value) {
  
  c_dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.c_dtype)
}

// bool trans_a = 3;
inline void MatmulParametersProto::clear_trans_a() {
  trans_a_ = false;
}
inline bool MatmulParametersProto::trans_a() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.trans_a)
  return trans_a_;
}
inline void MatmulParametersProto::set_trans_a(bool value) {
  
  trans_a_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.trans_a)
}

// bool trans_b = 4;
inline void MatmulParametersProto::clear_trans_b() {
  trans_b_ = false;
}
inline bool MatmulParametersProto::trans_b() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.trans_b)
  return trans_b_;
}
inline void MatmulParametersProto::set_trans_b(bool value) {
  
  trans_b_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.trans_b)
}

// uint64 m = 5;
inline void MatmulParametersProto::clear_m() {
  m_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MatmulParametersProto::m() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.m)
  return m_;
}
inline void MatmulParametersProto::set_m(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  m_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.m)
}

// uint64 n = 6;
inline void MatmulParametersProto::clear_n() {
  n_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MatmulParametersProto::n() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.n)
  return n_;
}
inline void MatmulParametersProto::set_n(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  n_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.n)
}

// uint64 k = 7;
inline void MatmulParametersProto::clear_k() {
  k_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MatmulParametersProto::k() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.k)
  return k_;
}
inline void MatmulParametersProto::set_k(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.k)
}

// int64 lda = 8;
inline void MatmulParametersProto::clear_lda() {
  lda_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MatmulParametersProto::lda() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.lda)
  return lda_;
}
inline void MatmulParametersProto::set_lda(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lda_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.lda)
}

// int64 ldb = 9;
inline void MatmulParametersProto::clear_ldb() {
  ldb_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MatmulParametersProto::ldb() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.ldb)
  return ldb_;
}
inline void MatmulParametersProto::set_ldb(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  ldb_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.ldb)
}

// int64 ldc = 10;
inline void MatmulParametersProto::clear_ldc() {
  ldc_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MatmulParametersProto::ldc() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.ldc)
  return ldc_;
}
inline void MatmulParametersProto::set_ldc(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  ldc_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.ldc)
}

// .stream_executor.dnn.ActivationMode activation_mode = 11;
inline void MatmulParametersProto::clear_activation_mode() {
  activation_mode_ = 0;
}
inline ::stream_executor::dnn::ActivationMode MatmulParametersProto::activation_mode() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.activation_mode)
  return static_cast< ::stream_executor::dnn::ActivationMode >(activation_mode_);
}
inline void MatmulParametersProto::set_activation_mode(::stream_executor::dnn::ActivationMode value) {
  
  activation_mode_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.activation_mode)
}

// string device_identifier = 12;
inline void MatmulParametersProto::clear_device_identifier() {
  device_identifier_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MatmulParametersProto::device_identifier() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.device_identifier)
  return device_identifier_.GetNoArena();
}
inline void MatmulParametersProto::set_device_identifier(const std::string& value) {
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.device_identifier)
}
inline void MatmulParametersProto::set_device_identifier(std::string&& value) {
  
  device_identifier_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.MatmulParametersProto.device_identifier)
}
inline void MatmulParametersProto::set_device_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.MatmulParametersProto.device_identifier)
}
inline void MatmulParametersProto::set_device_identifier(const char* value, size_t size) {
  
  device_identifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.MatmulParametersProto.device_identifier)
}
inline std::string* MatmulParametersProto::mutable_device_identifier() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.MatmulParametersProto.device_identifier)
  return device_identifier_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MatmulParametersProto::release_device_identifier() {
  // @@protoc_insertion_point(field_release:tensorflow.MatmulParametersProto.device_identifier)
  
  return device_identifier_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MatmulParametersProto::set_allocated_device_identifier(std::string* device_identifier) {
  if (device_identifier != nullptr) {
    
  } else {
    
  }
  device_identifier_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_identifier);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.MatmulParametersProto.device_identifier)
}

// int32 version = 14;
inline void MatmulParametersProto::clear_version() {
  version_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MatmulParametersProto::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.MatmulParametersProto.version)
  return version_;
}
inline void MatmulParametersProto::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.MatmulParametersProto.version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2futil_2fautotune_5fmaps_2fconv_5fparameters_2eproto
