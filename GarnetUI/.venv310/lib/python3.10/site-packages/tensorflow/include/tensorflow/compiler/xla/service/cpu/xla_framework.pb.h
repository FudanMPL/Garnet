// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/cpu/xla_framework.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto;
namespace xla {
namespace cpu {
class XlaFrameworkMappingProto;
class XlaFrameworkMappingProtoDefaultTypeInternal;
extern XlaFrameworkMappingProtoDefaultTypeInternal _XlaFrameworkMappingProto_default_instance_;
}  // namespace cpu
}  // namespace xla
PROTOBUF_NAMESPACE_OPEN
template<> ::xla::cpu::XlaFrameworkMappingProto* Arena::CreateMaybeMessage<::xla::cpu::XlaFrameworkMappingProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace xla {
namespace cpu {

// ===================================================================

class XlaFrameworkMappingProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xla.cpu.XlaFrameworkMappingProto) */ {
 public:
  XlaFrameworkMappingProto();
  virtual ~XlaFrameworkMappingProto();

  XlaFrameworkMappingProto(const XlaFrameworkMappingProto& from);
  XlaFrameworkMappingProto(XlaFrameworkMappingProto&& from) noexcept
    : XlaFrameworkMappingProto() {
    *this = ::std::move(from);
  }

  inline XlaFrameworkMappingProto& operator=(const XlaFrameworkMappingProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline XlaFrameworkMappingProto& operator=(XlaFrameworkMappingProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const XlaFrameworkMappingProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XlaFrameworkMappingProto* internal_default_instance() {
    return reinterpret_cast<const XlaFrameworkMappingProto*>(
               &_XlaFrameworkMappingProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(XlaFrameworkMappingProto& a, XlaFrameworkMappingProto& b) {
    a.Swap(&b);
  }
  inline void Swap(XlaFrameworkMappingProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline XlaFrameworkMappingProto* New() const final {
    return CreateMaybeMessage<XlaFrameworkMappingProto>(nullptr);
  }

  XlaFrameworkMappingProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<XlaFrameworkMappingProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const XlaFrameworkMappingProto& from);
  void MergeFrom(const XlaFrameworkMappingProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XlaFrameworkMappingProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xla.cpu.XlaFrameworkMappingProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto);
    return ::descriptor_table_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputsFieldNumber = 1,
    kFlattenedOutputsFieldNumber = 2,
    kOutputIsTupleFieldNumber = 4,
    kResultFieldNumber = 3,
  };
  // repeated int64 inputs = 1 [packed = true];
  int inputs_size() const;
  void clear_inputs();
  ::PROTOBUF_NAMESPACE_ID::int64 inputs(int index) const;
  void set_inputs(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_inputs(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      inputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_inputs();

  // repeated int64 flattened_outputs = 2 [packed = true];
  int flattened_outputs_size() const;
  void clear_flattened_outputs();
  ::PROTOBUF_NAMESPACE_ID::int64 flattened_outputs(int index) const;
  void set_flattened_outputs(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_flattened_outputs(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      flattened_outputs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_flattened_outputs();

  // optional bool output_is_tuple = 4;
  bool has_output_is_tuple() const;
  void clear_output_is_tuple();
  bool output_is_tuple() const;
  void set_output_is_tuple(bool value);

  // optional int64 result = 3 [default = -1];
  bool has_result() const;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int64 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:xla.cpu.XlaFrameworkMappingProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > inputs_;
  mutable std::atomic<int> _inputs_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > flattened_outputs_;
  mutable std::atomic<int> _flattened_outputs_cached_byte_size_;
  bool output_is_tuple_;
  ::PROTOBUF_NAMESPACE_ID::int64 result_;
  friend struct ::TableStruct_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XlaFrameworkMappingProto

// repeated int64 inputs = 1 [packed = true];
inline int XlaFrameworkMappingProto::inputs_size() const {
  return inputs_.size();
}
inline void XlaFrameworkMappingProto::clear_inputs() {
  inputs_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 XlaFrameworkMappingProto::inputs(int index) const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.inputs)
  return inputs_.Get(index);
}
inline void XlaFrameworkMappingProto::set_inputs(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  inputs_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.inputs)
}
inline void XlaFrameworkMappingProto::add_inputs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  inputs_.Add(value);
  // @@protoc_insertion_point(field_add:xla.cpu.XlaFrameworkMappingProto.inputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
XlaFrameworkMappingProto::inputs() const {
  // @@protoc_insertion_point(field_list:xla.cpu.XlaFrameworkMappingProto.inputs)
  return inputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
XlaFrameworkMappingProto::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.XlaFrameworkMappingProto.inputs)
  return &inputs_;
}

// repeated int64 flattened_outputs = 2 [packed = true];
inline int XlaFrameworkMappingProto::flattened_outputs_size() const {
  return flattened_outputs_.size();
}
inline void XlaFrameworkMappingProto::clear_flattened_outputs() {
  flattened_outputs_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 XlaFrameworkMappingProto::flattened_outputs(int index) const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  return flattened_outputs_.Get(index);
}
inline void XlaFrameworkMappingProto::set_flattened_outputs(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  flattened_outputs_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
}
inline void XlaFrameworkMappingProto::add_flattened_outputs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  flattened_outputs_.Add(value);
  // @@protoc_insertion_point(field_add:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
XlaFrameworkMappingProto::flattened_outputs() const {
  // @@protoc_insertion_point(field_list:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  return flattened_outputs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
XlaFrameworkMappingProto::mutable_flattened_outputs() {
  // @@protoc_insertion_point(field_mutable_list:xla.cpu.XlaFrameworkMappingProto.flattened_outputs)
  return &flattened_outputs_;
}

// optional int64 result = 3 [default = -1];
inline bool XlaFrameworkMappingProto::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XlaFrameworkMappingProto::clear_result() {
  result_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 XlaFrameworkMappingProto::result() const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.result)
  return result_;
}
inline void XlaFrameworkMappingProto::set_result(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.result)
}

// optional bool output_is_tuple = 4;
inline bool XlaFrameworkMappingProto::has_output_is_tuple() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XlaFrameworkMappingProto::clear_output_is_tuple() {
  output_is_tuple_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool XlaFrameworkMappingProto::output_is_tuple() const {
  // @@protoc_insertion_point(field_get:xla.cpu.XlaFrameworkMappingProto.output_is_tuple)
  return output_is_tuple_;
}
inline void XlaFrameworkMappingProto::set_output_is_tuple(bool value) {
  _has_bits_[0] |= 0x00000001u;
  output_is_tuple_ = value;
  // @@protoc_insertion_point(field_set:xla.cpu.XlaFrameworkMappingProto.output_is_tuple)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace cpu
}  // namespace xla

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcompiler_2fxla_2fservice_2fcpu_2fxla_5fframework_2eproto
